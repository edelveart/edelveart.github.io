---
import TimeLineElement from "../TimeLine.astro";
import Work from "../icons/Work.astro";

export const allExperiences = [
  {
    title: "ZifferJS | TypeScript Software Developer",
    subtitle: "oct.2023 - present | Remote",
    description:
      "I collaborate on the development of ZifferJS, a generative music notation and parser written entirely in TypeScript. It is designed to fit into any live coding environment that supports web technologies. My responsibilities include implementing mathematical concepts from simplicial complexes, performing unit testing (Vitest), writing documentation for Topos, and creating generator functions to work with infinite sequences.",
  },
  {
    title:
      "Newman Graduate School | Professor of the Master's Degree in Musicology",
    subtitle: "may.2024 - present | Remote",
    description:
      "Teaching modality through flipped classroom. Courses I am responsible for in the master's program: techniques for research, documentation, and dissemination in musicological research and music industries.",
  },
  {
    title: "EEST Toulouse Lautrec | Music production instructor",
    subtitle: "jun.2022 - present | Lima, Perú | Remote",
    description:
      "In charge of the music production and music theory courses. Anonymous feedback on my teaching practice is mostly positive. Technologies: MuseScore 4, Reaper 7.",
  },
  {
    title: "National University Daniel Alomía Robles | Full-time Professor",
    subtitle: "may.2019 - dec.2019 | Huánuco, Perú | In-person",
    description:
      "Courses I am responsible for: general education didactics, learning psychology, and music didactics. Technologies: Musescore 3, LaTeX.",
  },
  {
    title: "PAENFTS - Music Educator",
    subtitle: "jun.2015 - oct.2017 | Lima, Perú | In-person",
    description:
      "Teaching music theory and performance. Technologies: MuseScore 2.",
  },
];

const { workExperiences, indices } = Astro.props;
const filteredExperiences = indices
  ? indices.map((index) => workExperiences[index]).filter(Boolean)
  : workExperiences;
---

<div class="mb-5 mt-0" id="EXPERIENCE">
  <div class="text-2xl w-full font-bold flex items-center">
    <Work class="ml-0 mr-4" />Experience
  </div>
</div>

<div class="time-line-container mb-8 grid gap-4">
  {
    filteredExperiences.map((experience, index) => (
      <>
        <TimeLineElement
          key={index}
          title={experience.title}
          subtitle={experience.subtitle}
        >
          {experience.description}
        </TimeLineElement>
      </>
    ))
  }
</div>
