---
import { type BlogSchema } from "../content/config";
import BaseLayout from "./BaseLayout.astro";
import dayjs from "dayjs";
import localizedFormat from "dayjs/plugin/localizedFormat";

export interface Props extends BlogSchema {}

const { title, description, pubDate, updatedDate, badge, tags = [] } = Astro.props;
dayjs.extend(localizedFormat);
const displayDate = dayjs(pubDate).format("ll");
---

<BaseLayout title={title} description={description} , ogType="article">
  <main class="md:flex md:justify-center my-8">
    <article class="p-4 prose prose-img:mx-auto lg:max-w-[700px] max-w-[100vw]">
      <!-- {
        heroImage && (
          <Image
            width={750}
            height={422}
            format="webp"
            src={heroImage}
            alt={title}
            class="w-full mb-6"
          />
        )
      } -->
      <h1 class="title my-6 text-3xl font-bold"># {title}</h1>
      <div class="border-l-4 border-secondary pl-4 my-4 py-2">
        {pubDate && <time>{displayDate}</time>}
        <br />
        {badge && <div class="badge badge-secondary rounded-md p-3 mt-2">{badge}</div>}
        {
          tags &&
            tags.map((tag) => (
              <a
                href={`/blog/tag/${tag}`}
                class="badge badge-outline rounded-md p-3 ml-2 no-underline"
              >
                {tag}
              </a>
            ))
        }
        {
          updatedDate && (
            <div class="">
              {" "}
              Last updated on <time>{updatedDate}</time>{" "}
            </div>
          )
        }
      </div>

      <!-- <div class="divider my-5"></div> -->
      <slot />
    </article>
  </main>
</BaseLayout>

<script
  type="text/javascript"
  src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_CHTML"
></script>

<script type="text/x-mathjax-config">
  if (window.MathJax) {
    MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
  }
  MathJax.Hub.Config({
    tex2jax: {
      inlineMath: [
        ["$", "$"],
        ["\\(", "\\)"],
      ],
      processEscapes: true,
    },
    jax: ["input/TeX", "input/MathML", "input/AsciiMath", "output/CommonHTML"],
    extensions: [
      "tex2jax.js",
      "mml2jax.js",
      "asciimath2jax.js",
      "MathMenu.js",
      "MathZoom.js",
      "AssistiveMML.js",
      "[Contrib]/a11y/accessibility-menu.js",
    ],
    TeX: {
      extensions: ["AMSmath.js", "AMSsymbols.js", "noErrors.js", "noUndefined.js"],
      equationNumbers: {
        autoNumber: "AMS",
      },
    },
  });
</script>
